pool:
  name: 'self-host-docker'

trigger:
  branches:
    include:
    - main
  paths:
    include:
    - .cicd/docker/api
    - .cicd/ado/build-ai-r-core-api-multi-arch.yaml

pr: none

resources:
  repositories:
  - repository: platformops.dev
    type: github
    name: qbituniverse/platformops.dev
    endpoint: qbituniverse

stages:
- stage: DockerBuildApi
  displayName: 'Build Docker Images for Api'
  variables:
    imageRepository: qbituniverse/ai-r-core-api
    imageTag: $(imageVersion).$(Build.BuildId)
    imageVersion: 'N/A'
  jobs:
  - job: DockerBuild
    displayName: 'Build Multi-Arch Docker Images for Api'
    timeoutInMinutes: 0
    steps:
    - template: content/azure-devops/builds/assign-build-number.yaml@platformops.dev
      parameters:
        imageDockerfile: .cicd/docker/api/Dockerfile-ai-r-core-api
        imageTag: $(imageTag)
    
    - template: content/azure-devops/builds/build-push-docker-image-multi-arch.yaml@platformops.dev
      parameters:
        imageDockerfile: .cicd/docker/api/Dockerfile-ai-r-core-api
        imageRepository: $(imageRepository)
        imageTag: $(imageTag)

    - template: content/azure-devops/builds/build-push-docker-image-multi-arch.yaml@platformops.dev
      parameters:
        imageDockerfile: .cicd/docker/api/Dockerfile-ai-r-core-api-java
        imageRepository: $(imageRepository)
        imageTag: $(imageTag)-java

    - template: content/azure-devops/builds/build-push-docker-image-multi-arch.yaml@platformops.dev
      parameters:
        imageDockerfile: .cicd/docker/api/Dockerfile-ai-r-core-api-tidyverse
        imageRepository: $(imageRepository)
        imageTag: $(imageTag)-tidyverse

    - template: content/azure-devops/builds/build-push-docker-image-multi-arch.yaml@platformops.dev
      parameters:
        imageDockerfile: .cicd/docker/api/Dockerfile-ai-r-core-api
        imageRepository: $(imageRepository)
        imageTag: latest
